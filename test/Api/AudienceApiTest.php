<?php
/**
 * AudienceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * airEml - API (full)
 *
 * airEml - API (full)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AudienceApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AudienceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for attachAudienceUserContact
     *
     * Attach a Contact to the Audience User.
     *
     */
    public function testAttachAudienceUserContact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attachAudienceUserTag
     *
     * Attach a Tag to the Audience User.
     *
     */
    public function testAttachAudienceUserTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAudienceSegment
     *
     * Create a New Segment.
     *
     */
    public function testCreateAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAudienceSegmentFilter
     *
     * Create a New Segment Filter.
     *
     */
    public function testCreateAudienceSegmentFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAudienceTag
     *
     * Create a New Tag.
     *
     */
    public function testCreateAudienceTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAudienceUser
     *
     * Create a New User.
     *
     */
    public function testCreateAudienceUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceSegment
     *
     * Delete a Segment.
     *
     */
    public function testDeleteAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceSegmentFilter
     *
     * Delete a Filter from the Audience Segment.
     *
     */
    public function testDeleteAudienceSegmentFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceTag
     *
     * Delete a Tag.
     *
     */
    public function testDeleteAudienceTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceUser
     *
     * Delete a User.
     *
     */
    public function testDeleteAudienceUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceUserContact
     *
     * Delete a Contact from the Audience User.
     *
     */
    public function testDeleteAudienceUserContact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAudienceUserTag
     *
     * Delete a Tag from the Audience User.
     *
     */
    public function testDeleteAudienceUserTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAudienceSegment
     *
     * Retrieve an Existing Segment.
     *
     */
    public function testGetAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAudienceSegmentFilter
     *
     * Retrieve an Existing Filter from the Audience Segment.
     *
     */
    public function testGetAudienceSegmentFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAudienceTag
     *
     * Retrieve an Existing Tag.
     *
     */
    public function testGetAudienceTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAudienceUser
     *
     * Retrieve an Existing User.
     *
     */
    public function testGetAudienceUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAudienceSegmentFilters
     *
     * List All Filters from the Segment.
     *
     */
    public function testListAudienceSegmentFilters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAudienceSegments
     *
     * List All Segments.
     *
     */
    public function testListAudienceSegments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAudienceTags
     *
     * List All Tags.
     *
     */
    public function testListAudienceTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAudienceUserSegments
     *
     * List All Segments from the User.
     *
     */
    public function testListAudienceUserSegments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAudienceUsers
     *
     * List All Users.
     *
     */
    public function testListAudienceUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postFilterCounts
     *
     * Get Filter Counts.
     *
     */
    public function testPostFilterCounts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAssignActiveStatusToAudienceSegment
     *
     * Activate a Segment.
     *
     */
    public function testUpdateAssignActiveStatusToAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAssignInactiveStatusToAudienceSegment
     *
     * Deactivate a Segment.
     *
     */
    public function testUpdateAssignInactiveStatusToAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAudienceSegment
     *
     * Update a Segment.
     *
     */
    public function testUpdateAudienceSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAudienceSegmentFilter
     *
     * Update a Filter in the Audience Segment.
     *
     */
    public function testUpdateAudienceSegmentFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAudienceTag
     *
     * Update a Tag.
     *
     */
    public function testUpdateAudienceTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAudienceUser
     *
     * Update a User.
     *
     */
    public function testUpdateAudienceUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
